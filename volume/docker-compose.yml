services:
  postgres:
    container_name: postgres
    image: postgres:13
    env_file: docker/.env
    ports:
      - "5433:5432"
    volumes:
      - ./postgres-db-volume:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always
    networks:
      - my_network
    

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    # expose:
      # - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s
    restart: always
    volumes:
      # - redis:/data
      # - ./data/redis:/data
      - /media/jacob/first_disk/data/redis:/data
    networks:
      - my_network

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com" # 這裡設置你的 pgAdmin 登錄郵箱
      PGADMIN_DEFAULT_PASSWORD: "admin" # 這裡設置你的 pgAdmin 登錄密碼
    ports:
      - "8888:80" # 將 pgAdmin 的 80 端口映射到主機的 8080 端口
    volumes:
      - ./pgadmin:/var/lib/pgadmin # 持久化 pgAdmin 數據到本地目錄
    networks:
      - my_network

volumes:
  # postgres-db-volume:
  redis:
  #   external: false

networks:
  my_network:
    driver: bridge
    external: true
  
